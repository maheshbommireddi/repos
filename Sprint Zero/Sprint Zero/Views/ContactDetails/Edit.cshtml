@model Sprint_Zero.Models.ContactDetail

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ContactDetail</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <form name="myForm">

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                <label class="control-label col-md-2">Phone:</label>
                <div class="col-md-10">
                    <input id='PhoneNumber' class="form-control" type=text value="@Model.PhoneNumber" name="Phone"  onblur='return validatePhone();' required>
                    <div id="validePhoneNumber" class="hidden">Please enter a valide Phone Number</div>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Email:</label>
                <div class="col-md-10">
                    <input type='text' class="form-control" value="@Model.EmailAddress" name="EmailAddress" id="invalidEmail" onblur='return validateForm();' placeholder='your email' required>
                    <div id="valideEmail" class="hidden">Please enter a valide Email</div>
                </div>
            </div>

            <div class="form-group" id="pass1">
                <label class="control-label col-md-2">Password:</label>
                <div class="col-md-10">
                    <input type='password' value="@Model.Password" class="form-control" name="Password" id="Password" onblur='return passwordValidation();' title="Must contain at least one number and one uppercase and one lowercase letter and one special character, and at least 8 or more characters" required>
                </div>
                <div id="passwordNull" class="hidden">Please enter a valide password</div>
                <div id="passwordError" class="hidden">Password did not meet the requirements</div>
            </div>

              <div class="form-group" id="pass2">
                <label class="control-label col-md-2">Password2:</label>
                <div class="col-md-10">
                    <input type='password' value="@Model.Password2" class="form-control" name="Password2" id="Password2" onblur=' return validatePassword();' />
                </div>
                <div id="passwordMisMatach" class="hidden">Re-Entered Password did not match</div>
                <span id='message'></span>
            </div>

              <div class="form-group">
                  <label for="gameSystem" class="control-label col-md-2">Game:</label>
                  <div class="col-md-10">
                      <select class="form-control" id="gameSystem" name="Game" value="@Model.Game" onchange="displayVideoGameOptions()">
                          <option value=""> </option>
                          <option value="PS4">PS4</option>
                          <option value="XBoxOne">XBox One</option>
                      </select>
                  </div>


                  @*<div class="col-md-10">
                      @Html.DropDownList("Game", new List<SelectListItem>  {
                                       new SelectListItem {Text="PS4",Value="PS4"},
                                       new SelectListItem {Text="XBox One",Value="XBox One"},
                                      
                                     }, "Select Game", new { @class = "form-control" })
                  </div>*@



              </div>


              <div class="form-group hidden" id="noGame">
                  <label for="emptyGame" class="control-label col-md-2">Please select Video game</label>
                  <div class="col-md-10">
                      <select class="form-control" id="emptyGame">
                          <option value=""> </option>
                      </select>
                      </div>
                  </div>
              <div class="form-group hidden" id="ps4Game">
                  <label for="PS4" class="control-label col-md-2">Please select Video game</label>
                  <div class="col-md-10">
                      <select class="form-control" id="PS4">
                          <option value="Gods Of War">Gods Of War</option>
                          <option value="Crash Bandicoot">Crash Bandicoot</option>
                      </select>
                      </div>
                  </div>
              <div class="form-group hidden" id="xbox">
                  <label for="XBox" class="control-label col-md-2">Please select Video game</label>
                  <div class="col-md-10">
                      <select class="form-control" id="XBox">
                          <option value="Halo">Halo</option>
                          <option value='Gears of War'>Gears of War</option>
                      </select>
                      </div>
                  </div>

                  <div class="checkbox">
                      <label><input name="check" type="checkbox" onchange="hideAgeColumn()" id="isAgeSelected"> Is age 18 or over</label>
                  </div>

                  <div class="form-group" id="hideAge">
                      <label class="control-label col-md-2">Age:</label>
                      <div class="col-md-10">
                          <input class="form-control" id='age' onblur="verifyAge(event)" type='text' name="AgeCheck" />
                          <span id="below18Error" class="hidden">Age must be below 18 years</span>
                          <span id="valideNumber18Error" class="hidden">Age must be a number</span>
                          </div>
                      </div>

                      <div class="form-group">
                          <div class="col-md-offset-2 col-md-10">
                              <input type="submit" value="Save" class="btn btn-default" />
                          </div>
                      </div>
</form>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
